
import java.awt.Color;
import java.awt.Image;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Eric
 */
public class logIn extends javax.swing.JFrame {
 private static String preparedEmail = "admin@gmail.com";
 private static String preparedPassword ="crushKoSiAno";   
 /**
     * Creates new form logIn
     */
    public logIn() {
        initComponents();
        scaleImageIcon(lblLogo);
        moveTxtEmail();
        movePassword();
        moveShowPassword();
        
        txtFocusListener();
        mouseHover();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBg = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        lblLogin1 = new javax.swing.JLabel();
        lblLogin2 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        lblPass = new javax.swing.JLabel();
        pswPassword = new javax.swing.JPasswordField();
        chkbxShowPassword = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlBg.setBackground(new java.awt.Color(0, 0, 0));
        pnlBg.setPreferredSize(new java.awt.Dimension(1272, 690));
        pnlBg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(204, 204, 204));
        jLabel1.setFont(new java.awt.Font("Slate Pro Black", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("HOTEL AMIGGAS");
        pnlBg.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 40, 330, -1));

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/AmiggasLogo.png"))); // NOI18N
        lblLogo.setText("jLabel2");
        pnlBg.add(lblLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 10, 140, 120));

        lblLogin1.setBackground(new java.awt.Color(204, 204, 204));
        lblLogin1.setFont(new java.awt.Font("Slate Pro Black", 1, 30)); // NOI18N
        lblLogin1.setForeground(new java.awt.Color(255, 255, 255));
        lblLogin1.setText("Name");
        pnlBg.add(lblLogin1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, 90, -1));

        lblLogin2.setBackground(new java.awt.Color(204, 204, 204));
        lblLogin2.setFont(new java.awt.Font("Slate Pro Black", 1, 34)); // NOI18N
        lblLogin2.setForeground(new java.awt.Color(255, 255, 255));
        lblLogin2.setText("Login");
        pnlBg.add(lblLogin2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 100, -1));

        txtEmail.setBackground(new java.awt.Color(26, 34, 54));
        txtEmail.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(255, 255, 255));
        txtEmail.setText("Put your Email here");
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        pnlBg.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(-430, 270, 520, 50));

        btnLogin.setBackground(new java.awt.Color(85, 116, 244));
        btnLogin.setForeground(new java.awt.Color(255, 255, 255));
        btnLogin.setText("Login");
        btnLogin.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });
        pnlBg.add(btnLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 540, 140, 40));

        lblPass.setBackground(new java.awt.Color(204, 204, 204));
        lblPass.setFont(new java.awt.Font("Slate Pro Black", 1, 30)); // NOI18N
        lblPass.setForeground(new java.awt.Color(255, 255, 255));
        lblPass.setText("ID/ Password");
        lblPass.setToolTipText("");
        pnlBg.add(lblPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 360, 210, -1));

        pswPassword.setBackground(new java.awt.Color(26, 34, 54));
        pswPassword.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        pswPassword.setForeground(new java.awt.Color(255, 255, 255));
        pswPassword.setText("PASSWORD");
        pnlBg.add(pswPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(-430, 410, 520, 50));

        chkbxShowPassword.setBackground(new java.awt.Color(6, 7, 14));
        chkbxShowPassword.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        chkbxShowPassword.setText("Show Password");
        chkbxShowPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkbxShowPasswordActionPerformed(evt);
            }
        });
        pnlBg.add(chkbxShowPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(-60, 480, 150, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlBg, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 640, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(pnlBg, javax.swing.GroupLayout.PREFERRED_SIZE, 640, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
//GETTING THE VALUES FROM TEXT AND PASSWORD FIELDS
        String enteredEmail = txtEmail.getText();
        String enteredPassword = new String(pswPassword.getPassword());

        // Check if email and password match the prepared values
        if (enteredEmail.equals(preparedEmail) && enteredPassword.equals(preparedPassword)) {
            // Successful login
            JOptionPane.showMessageDialog(this, "Login Successful!");
           HomePage HomePage = new HomePage();
           HomePage.setVisible(true);
           this.dispose();

            
        } else {
            JOptionPane.showMessageDialog(this, "Invalid email or password. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }                                        

    private void btnForgotActionPerformed(java.awt.event.ActionEvent evt) {     
    }//GEN-LAST:event_btnLoginActionPerformed

    private void chkbxShowPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkbxShowPasswordActionPerformed
        // Get the state of the checkbox
        boolean isSelected = chkbxShowPassword.isSelected();

        // Show or hide the password based on the checkbox state
        if (isSelected) {
            // Show the password
            pswPassword.setEchoChar((char) 0); // Set echo char to 0 to show password
        } else {
            // Hide the password
            pswPassword.setEchoChar('*'); // Set echo char to * to hide password
        }
    }//GEN-LAST:event_chkbxShowPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(logIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(logIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(logIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(logIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new logIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnLogin;
    private javax.swing.JCheckBox chkbxShowPassword;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblLogin1;
    private javax.swing.JLabel lblLogin2;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblPass;
    private javax.swing.JPanel pnlBg;
    public static javax.swing.JPasswordField pswPassword;
    public static javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables
  //ADDING TEXT LISTENER TO THE TEXT, IF THE USER CLICKS IT, IT REMOVES THE DEFAULT INFO, AND SETS TO EMPTY, 
    //IF THE USER UNCLICKS IT SETS THE TEXT TO DEFAULT INFO
    
    public void txtFocusListener() {
        txtEmail.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (txtEmail.getText().equals("Put your Email here")) {
                    txtEmail.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (txtEmail.getText().isEmpty()) {
                    txtEmail.setText("Put your Email here");
                }
            }
        });
        pswPassword.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (pswPassword.getText().equals("PASSWORD")) {
                    pswPassword.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (pswPassword.getText().isEmpty()) {
                    pswPassword.setText("PASSWORD");
                }
            }
        });
    }

    public void mouseHover() {
        //CHANGES THE COLOR OF THE BUTTONS WHEN THE USER'S MOUSE HOVERS TO IT
        btnLogin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                // Change the button's background color when mouse enters
                btnLogin.setBackground(new Color(89, 169, 106));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                // Change the button's background color when mouse exits
                btnLogin.setBackground(new Color(85, 116, 244)); // Revert to original color
            }
        });

    }

    private void moveTxtEmail() {
        Timer timer = new Timer(1, (e) -> {
            int currentX = txtEmail.getX();
            int targetX = 180; // Adjust this value to the desired stopping point

            if (currentX < targetX) {
                txtEmail.setLocation(currentX + 15, txtEmail.getY()); // Increase X-coordinate to move right

            } else {
                ((Timer) e.getSource()).stop();
            }
        });
        timer.start();
    }

    private void movePassword() {
        Timer timer = new Timer(1, (e) -> {
            int currentX = pswPassword.getX();
            int targetX = 180; // value to the desired stopping point

            if (currentX < targetX) {
                pswPassword.setLocation(currentX + 15, pswPassword.getY()); // Increase X-coordinate to move right
            } else {
                ((Timer) e.getSource()).stop();
            }
        });
        timer.start();
    }

    private void moveShowPassword() {
        Timer timer = new Timer(1, (e) -> {
            int currentX = chkbxShowPassword.getX();
            int targetX = 180; // value to the desired stopping point

            if (currentX < targetX) {
                chkbxShowPassword.setLocation(currentX + 5, chkbxShowPassword.getY()); // Increase X-coordinate to move right
            } else {
                ((Timer) e.getSource()).stop();
            }
        });
        timer.start();
    }

    public void scaleImageIcon(JLabel label) { //scaling the image icon for jlabels
        Icon icon = label.getIcon();
        if (icon instanceof ImageIcon) {
            ImageIcon imageIcon = (ImageIcon) icon;
            Image image = imageIcon.getImage().getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
            label.setIcon(new ImageIcon(image));
        } else {
            System.err.println("The label does not have an ImageIcon set.");
        }
    }

}
